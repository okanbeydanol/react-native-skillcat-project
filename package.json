{
  "name": "SkillCat",
  "version": "5.3",
  "private": true,
  "scripts": {
    "android": "if [ -d android ]; then cd android && react-native run-android; fi",
    "ios": "if [ -d ios ]; then cd ios && react-native run-ios; fi",
    "ios:uuid": "if [ -d ios ]; then cd ios && react-native run-ios --udid='14C3EA0C-6AC6-44F4-9E57-D28D0F7B9CEF'; fi",
    "start": "npm run watchman-reset && npm run killPort && react-native start --reset-cache",
    "test": "jest",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "eject": "npx react-native eject",
    "watchman-reset": "watchman watch-del $(pwd) && watchman watch-project $(pwd)",
    "killPort": "npm run install:killPort && npx kill-port 8081",
    "gradlew:stop": "if [ -d android ]; then cd android && ./gradlew --stop; fi",
    "gradlew:clean": "if [ -d android ]; then cd android && ./gradlew --refresh-dependencies --warning-mode=all --continue --daemon; fi",
    "gradlew:build": "npm run watchman-reset && if [ -d android ]; then cd android && ./gradlew createBundleReleaseJsAndAssets --refresh-dependencies --warning-mode=all --continue --daemon; fi; if [ -d android ]; then cd android && ./gradlew :app:bundleRelease --warning-mode=all --continue --daemon; fi",
    "rsync:ios": "if [ -d iosReplace ] && [ -d ios ]; then rsync -a iosReplace/ ios/; fi",
    "rsync:android": "if [ -d androidReplace ] && [ -d android ]; then rsync -a androidReplace/ android/; fi",
    "install:ios:packages": "if [ -d ios ]; then cd ios && env /usr/bin/arch -arm64 pod install; fi",
    "install:iconCreator": "node -e \"try { require.resolve('icon-set-creator'); } catch (e) { require('child_process').execSync('npm install -g icon-set-creator'); }\"",
    "install:killPort": "node -e \"try { require.resolve('kill-port'); } catch (e) { require('child_process').execSync('npm install -g kill-port'); }\"",
    "install:version": "node -e \"try { require.resolve('react-native-version'); } catch (e) { require('child_process').execSync('npm install -g react-native-version'); }\"",
    "install:android:packages": "npm run gradlew:build",
    "create:appIcons": "npm run install:iconCreator && iconset create",
    "change:bundleID": "node scripts/change_app_bundle_id.js",
    "change:version": "npm run install:version && react-native-version --target android,ios --set-build 13752 --never-amend",
    "purge": "npm run eject && npm run change:bundleID && npm run rsync:ios && npm run rsync:android && npm run change:version && npm run create:appIcons && npm run install:ios:packages && npm run install:android:packages && npm run start",
    "purge:js": "rm -rf node_modules && rm -rf package-lock.json && rm -rf yarn.lock && npm cache verify && yarn install",
    "purge:ios-android": "if [ -d ios ]; then rm -rf ios; fi; if [ -d android ]; then rm -rf android; fi",
    "purge:ios": "if [ -d ios ]; then rm -rf ios/build && rm -rf ios/Pods; fi; rm -rf ~/Library/Developer/Xcode/DerivedData/*",
    "purge:android": "if [ -d android ]; then rm -rf android; fi; npm run gradlew:stop && rm -rf ~/.gradle/caches/ && rm -rf ~/.gradle/daemon/ && rm -rf ~/.gradle/native/ && if [ -d android ]; then rm -rf android/app/build && rm -rf android/.gradle; fi",
    "full:reset": "npm run purge:ios-android && npm run purge:js && npm run purge:ios && npm run purge:android && npm run purge",
    "react-devtools": "react-devtools"
  },
  "dependencies": {
    "@react-native-async-storage/async-storage": "^1.23.1",
    "@react-navigation/bottom-tabs": "^6.5.20",
    "@react-navigation/drawer": "^6.6.15",
    "@react-navigation/native": "^6.1.17",
    "@react-navigation/native-stack": "^6.9.26",
    "@reduxjs/toolkit": "^2.2.5",
    "@types/react-redux": "^7.1.33",
    "i18next": "^23.11.5",
    "lodash": "^4.17.21",
    "react": "18.2.0",
    "react-devtools": "^4.27.2",
    "react-i18next": "^14.1.2",
    "react-native": "0.74.2",
    "react-native-device-info": "^11.1.0",
    "react-native-eject": "^0.2.0",
    "react-native-gesture-handler": "^2.17.1",
    "react-native-keyboard-controller": "^1.12.4",
    "react-native-localize": "^3.2.0",
    "react-native-mask-input": "^1.2.3",
    "react-native-permissions": "^4.1.5",
    "react-native-reanimated": "^3.12.1",
    "react-native-reanimated-carousel": "^3.5.1",
    "react-native-safe-area-context": "^4.10.5",
    "react-native-screens": "^3.32.0",
    "react-native-svg": "^15.3.0",
    "react-native-svg-transformer": "^1.4.0",
    "react-redux": "^9.1.2",
    "redux": "^5.0.1",
    "redux-persist": "^6.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/preset-env": "^7.20.0",
    "@babel/runtime": "^7.20.0",
    "@react-native/babel-preset": "0.74.84",
    "@react-native/eslint-config": "0.74.84",
    "@react-native/metro-config": "0.74.84",
    "@react-native/typescript-config": "0.74.84",
    "@tsconfig/react-native": "^3.0.5",
    "@types/jest": "^29.5.12",
    "@types/react": "^18.3.3",
    "@types/react-test-renderer": "^18.3.0",
    "babel-jest": "^29.6.3",
    "eslint": "^8.19.0",
    "jest": "^29.6.3",
    "prettier": "2.8.8",
    "react-test-renderer": "18.2.0",
    "typescript": "^5.0.4"
  },
  "engines": {
    "node": ">=18"
  }
}
